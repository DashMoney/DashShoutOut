


 if(docArray.length !== 0){ -> Cant call for name query if there is not docs after the new/old comparison -> check -> 
    
    
        handleLoadNewSO = (docArray) => {
            //this gets the new name and maybe check if already have and then the button will on display to load new msgs

            //FIRST CHECK IF I ALREADY HAVE THE NAME IN THE NAME ARRAY. -> SAVE A QUERY

            //how to i check if it has it?

            //it getting more complicated because what if I have multiple new docs and some I have and others I don't.. -> Skio for now and do later ->

            // will have to do a forEach or map and then check and see if any are undefined.. otherwise just call all and save myself from sorting it all out.

            // let nameDoc = this.state.EveryoneNames.find(doc => {
            //   return msgDoc.$ownerId === doc.$ownerId
            // })

            // if(nameDoc !== undefined){
            //   this will shortcut the query and set up the button.
            // also handle if already have something in the array so it just adds
            // }else{
            //This will be the query.

            //}
            

            // IF NOT THEN QUERY

            //AFTER QUERY ADD TO NAME ARRAY AND THEN PUSH THE NEW MSG DOC TO THE HOLDING TO SIGNAL THE BUTTON TO APPEAR!! ->

Hold off Identity and (future - wallet) until after -> maybe bc I still need identity if don't have the info. -> DONE

isLoadingRefresh is ended by Everyone and ForYou -> That will allow buttons press so choose one and not both -> so the ForYou will probably be the lagger -> but it may also take too long when you just want to send a msg or shoutout... -> 

another good thought -> shift the msg docs set in state to be withthe names so that only do once instead of twice!! with threadsdoc too -> 6 instances to remove!! -> do it!!

new thought -> with auto update -> after names are gotten there is no loading state, it just pushes to the array for display and displays it!! no spinner!!!


TEST THE OBJECT AND TUPLE FOR SET IF IT WORKS -> NEED TO KNOW -> NOPE they don't
https://stackoverflow.com/questions/41404607/why-does-javascript-set-not-do-unique-objects
JSON.stringify and JSON.Parse or I can just compare the $id property of the objects.
I could just do a separate by the $id but that just makes extra work, just do the work on the array of objects. so I have an array of objects and I just want to return a unique set 
well I could also just filter before i combine them? and then I wouldn't have to compare the lengths just see if there is anything left? -> how 

so if i work separately then I can just loop through new and compare each $id to each other

if put together, I can just count each one and .. and ....

SEPARATE IS BETTER FOR THIS BECAUSE i DON'T HAVE TO DO A COMPLETE loop
ALSO i THINK i CAN JUST CREATE A SEPARATE FUNCTION FOR THIS AND RETURN WHAT i NEED SO A LOT OF REUSE! -> 
compareNewToOld(newDocs, oldDocs){
    let leftOver = [];

    newDocs.forEach(doc => {
        use find i think no use includes() no
        just do a manual loop until if finds or returns false..
    https://masteringjs.io/tutorials/fundamentals/foreach-break  

    this isn't right need to if return true from every then I add to leftOver!! -> do it ->   

     if(oldDocs.every(docu => docu.$id !== doc.$id){
        leftOver.append(doc);
     }
        }) 

    USE every() INSTEAD OF FOREACH!!!!

    https://www.w3schools.com/jsref/jsref_every.asp
    
}

To do:
1) fix the msg creation so there is $id with it to enable thread -> DONE -> NEED TO TEST -> now its done thx threads

2) add name doc or equivalent to thread creation so that it has your name for thread -> Done -> TEST -> now its correct dont forget ... in arrays

3) automate the msg retrieval -> pull all msgs like before and then pull threads for all the msgs
        -> how to do I know if I have something new? pull the top and compare body, no just compare the time. to the lowest time I have. I can augment the retrieval to limit this as well. so 
        -> well it may just be easier to pull entire new and later add a feature to grab old messages?!! <- I think yeah

So where do i trigger the setInterval? after the loading?? what loading??
        -> Separate functions for the auto update!! -> so thereby separating

Do a search all the msgs and threads SEPARATELY -> SOLUTION FOR THE THREADS work but how to solve for msgs. instead of keeping time of last msg in state just retrieve from the msgsArray and then just compare? doing time is new to me , why not just pull and add and set for unique and see if length changes?
WHAT HAPPENS IF MSGS GROWS TO GREATER THAN 100 AND CAN'T SEARCH ALL.. WELL I JUST SUPPOSE i WILL RUN INTO LIMITS EVENTUALLY... -> accepted
    -> Search the messages and compare to old how? 
    -> when search threads of msgs and compare to old? or just add how to ensure unique and how to know that there are new ones?
            -> !!!! just add the new to old and create set to ensure unique and if the length changed then you have new msgs BUT THEN WHERE AND WHEN DO I GET THE NEW NAMES FOR THE DOCS???
            -> if lengths is new and longer then just pull


----------


Issue!!! -> I use the $id of the msgs to attach the threads and new msgs are not getting the $id added so then I can't add threads to it or the threads may cause everything to fail!  -> SOLVE THE ISSUE BY REMOVING THE EARLY DISPLAY OF MSG SO THAT I HAVE THE $ID AND I DON'T HAVE TO CHANGE ALL THE STRUCTURE YET(THE TUPLE STUFF IS NOT GOOD IDEA) -> gOOD FIX

Disable making a thread when loadingRefresh so like when the buttons are disabled also -> I LIKE IT! -> 

WHAT ABOUT THE THREADS FORYOU WHERE THE TWO QUERIES ARE MERGED TOGETHER?
    THREADS WILL WORK PRETTY EASIER FOR THE UPDATE BECAUSE I CAN JUST THROW ALL THE msgs in an array and do the query? -> can only do up to 100 unique in arra


I THINK I HAVE A SOLID PATH FOR THREADS BUT WHAT ABOUT THE RELOAD -> HOW DOES THE BACKGROUND LOADING WORK? AND PERHAPS MAYBE USE CREATEAT OR THE TIMESTAMP TO ONLY SEARCH PAST A CERTAIN TIME BUT ALSO WHAT WILL THESE SEARCHES BE ->
    STORE A DATETIMEOBJECT WITH MILLISECONDS IN STATE.
    THEN PERFORM THE THREE QUERIES THAT I DO IN THE BEGINING AND IF THE LENGTH COMES BACK AS NOT ZERO THEN I PERFORM THE NAME SEARCH AND THEN IF THE NAME
    OR JUST LOOK THERE THE NAMES THAT i ALREADY HAVE? SHOULD I jUST STORE ALL NAMES IN ONE PLACE? -> Do I have to break apart the tuples?
    -> THESE ^^ ARE ALL GOOD QUESTIONS.
AND HOW DO I GET EVERYTHING BEFORE AS ALLOW BUTTON TO RELOAD? SO THAT IT HAPPENS INSTANTANEOUSLY -> 

Separate Threads from messages -> in Data Contract to help save on cost and because it is also okay? --> chekc the okay part but I think will will save on Data contract and possibly better solution to the problem?

Threads Capability and autoLoad -> 

How to load and how to query ->
    So now -> EveryoneMsg(Shouts) -> Grab names -> makes tuples for display
           -> ForYou yourShouts & tags -> tags msgs -> names -> combine for display

***Look more carefully -> Everyone -> msgs have sh:'out', Foryou myShouts -> ownerId, , and lastly gets tags which gets msgs. 

threads simply have a msgId they are attached to. Foryou myShouts would pick up the thread msgs.
Also CAN YOU ADD A TAG TO A THREAD? WELL WHY NOT JUST ADD THE ORIGINAL MSG AND THEN THE TAG WILL APPEAR? -> ???!! -> DOES THAT SOLVE IT?

i CAN JUST EXTEND WHAT IS CURRENTLY HAPPENING WITH TAGS BUT THE ISSUE IS THAT THE MYsHOUTS WILL GRAB ALL MY THREADS AS WELL... -> wHAT IF i ADD SHOUT TO MY SHOUTS TO SPECIFY BUT ALSO GRABS MY dMS AS WELL.. -> !!!!! -> nEED TO cHANGE THE DC INDEX FOR QUERY THEN -> 


HOW TO ADD THREADS -> nEED TO SEPARATE THREADS FROM MSGS IF i AM GOING TO LOAD SEPARATELY BUT IF GOING TO LOAD TOGETHER THEN DO WHAT? (Limit on doc return: 100)
Could implement a load more a the bottom with startAt or StartAfter
THIS ^^^ MAY BE THE FUTURE WAY BUT IT JUST DOESN'T IT HOW IT WORKS.

Test ideas -> 

Platform login vs Wallet login -> ?

User just sees a button on login screen -> use a div so one button on each side -> 
Questions -> does plat login use skipsync and how?
          -> or can it use offline mode? ->

    Need to disable the topup button if balance === 0, its a catch all <-

Question -> will the changing of skipsync cause the app to fail. I know that the console.log will yell about it.

What about removing adapter <- so won't affect.. -> Do It ->



TODO LIST - We at it again!!!

11) Persistanct issues
-> hit enter/return in create message errors BC textarea vice input has no onSubmit. and Regex kicks unless multiline


Much Success
-10) Top UP is connected but need to connect to App
            So I can disconnect the BottomNav when I send a message, refresh or Top up..... -> DONE!!

-9)MAJOR UPDATE WITH TESTNET FUNCTIONALITY
        -> What about a modal for the loading spinner so spins on top of everything?? -> LATER Possibly ->

-8) handle formatting -> 
        how to display Announcement correctly -> really probably just include a bootstrap badge that says "Announcement" ;)

        how to handle the order -> this should probably involve how the datacontract*** is created in the first place!!!!

-7) Query for DGT Followers -> DGT Make Announcement creates a dsomessage -> then the follower will query the DGT self invites and then query dso messages from each of the GroupNames but how will it not pick up all the DSOMessages from GroupOwner?? -> special tag -> @01 or something that is not a name??!!

-> Perhaps query should just be to dgtmessages but how to decern regular message from Announcement -> include in DGTDataContract??!!

->Announcement is its own doc? -> ??!!! -> this seems to make the most sense



-6) Had an idea -> something about removing something -> so people couldn't see order on Everyone -> But it may clutter but that is okay, the more the merrier, I say

-5) ToDo: a) fix tags for unique names and limit to 30NO 60Yes tags ->
                -> 60 why not should be hard to hit and not even limit.
                ->
          b) make the newmessage to implement lowercase and trigger  
            docs creation -> 
          c) Fix BottomNav buttons -> DONE

-4) Make List of what I could add in version 2:
        1) Local storage - probably
        2) Improved Data Contract -probably
                -> or introduce a verify function that runs in background
                    -> I think I will go with a check that uses the ownerId of each Document and then that will check if the dashUniqueName matches the ownerID/identityID (Im pretty sure those are the same)
                -> or fix the data contract -> i think the data contract has everything i need -> the other way would be that I don't include the name and then I just search the ownerId and retrieve the name but would that slow the presentation/display too much?
                    -> later if I wanted I could just implement the searchFirst because Document already has that too.
        3) Live Reload? -> probably no
        4) Tag yourself -> == Like ? -> maybe
        5) Reply or Link -> maybe
        6) search or filtering on everyone tab -> probably
        7) Load More -> add the bottom of page to pull older messages!

-3) Rip out the Mock up stuff.. -> DONE
    ->LandingPage Stuff -> DONE
    Remove the App.js mock up functions -> DONE
    
-2) Add a Topic Tag or # to the data Contract -WHY -> dont know -> so NO

    -> implement a local storage to track the "filter" or "Search DSO" 

        -> this will be a list in the Everyone? -> Version 2
        -> when you search it adds to list of messages so that two people talking back and forth can be seen.


-1) Make the buttons the same width! - Looks okay on mobile already.

0) Change DGT to DSO -> DONE

0ai) Make Bottom Nav -> 1 level -> DONE
    -> Fix expand nav function and -> DONE
    unexpand top if any on bottom is pressed ->

0a) Incorporate the tag in the message to the users so can have multiple users tagged->
    ->and make them blue!-> Nope -> Just List below -> DONE
    -> update everything from receiving just one tag to an array -> DONE

    -> auto tag myself so that I only query once and that is it????*****
    -> because the tagging and the text are separate so hmmmm
    -> can I just user tags in document as lowercase and it work?
    -> works because I control the query and it is hackable/manipulatible

THIS ^^^ WORK ON ABOVE THAT IS NOT DONE YET ^^^^

    -> !!! have to implement a VERIFIER that checks the originator with the identity *********************************** 2ND VERSION
     -> This brings in many questions but it seems that everyone will have to validate the name to an identity unless like with DPNS and DAshPay maybe there is a validation
      -> Data Triggers??

---------------------------------------------------------------------------

1) DONE <- Separate out the Everyone and the For you pages - make own files/objects
    ->  This is much more far reaching that is just from off the top
        -> got it 
    ->  Add/Separate State for the Everyone vs the For you messages
        -> DONE - USED SEARCH and changed them - Thumbs up
    ->  Change state/props that is passed to MessagePage
        -> DONE - see above
    ->  Separate into new files the Everyone and For you-> DONE
        -> Remove the GroupsPage Stuff -> DONE
    ->  implement the OnSelect Nav function to display chosen -> DONE
    -> In For you, how to differenctiate the me and others???
        -> -> DONE
2) DONE <- uniformly implement the tab style for login and page selection
    -> I think one may be tabs and the other Nav Bootstrap components
        -> They are different and I just removed the Login one
        -> I don't mind the colors for now in the Nav********
    -> Clean up wording for the mnemonic login modal -> DONE
3) DONE <- implement the message creation for the tag a user 

  -> This will be a bit more than expected!!!****
    -> incorporate into a single Form on one files
            -> tag a user component integrate -> DONE
            -> OnChange integrate -> DONE
            -> Change text to validation format vs alert -> DONE
            -> submit button control logic -> DONE
            -> OnSubmit integrate / fix to work -> DONE , EASY DAY

    -> incorporate both inputs to the onChange functions -> DONE
    -> change the validation to an alert so I can control -> NO -> validation -> DONE

    -> I THINK I FIXED THE VALIDITY PROBLEM BECAUSE IT JUST LOOKS BETTER THAN THE ALERT. I NEED TO ADD / INTEGRATE THE TAGAUSER IN THE CREATEMESSAGEMODAL SO THAT THE ONCHANGE WILL TRIGGER THE VALIDATION 
        -> YES -> DONE

  -> separate out the tag a user and make appear and disappear. -> maybe no
  -> got to 8) also

  -> 
4) Adds to the For you page -> what ? -> Just messages -> DONE
5) Create some For you messages -> DONE
    -> differenctiate between you and others -> Change your name to BLUE
            ->DONE
6) Add more separations in the relative time difference -> DONE
7) Handle Empty messages in For you page-> DONE
8) Fix Heading in the Create Message Modal -> DONE
    -> Maybe move out of heading section and just put in the body?
    -> I DONT KNOW I HAVENT HAD THIS PROBLEM BEFORE BUT IT LOOKS ALRIGHT

9) Will there be a pause during the submitting of the document? or will it just display and load in the background?

10) Walk through the login/load process ->
        -> Identity(mnem) -> Name(idenity) -- (2xDSODocs-Nope) -> DSOEveryone
            -> (Actually it should display even when don't have all!! like the name and alias on DGN -> hahahahahahah:)
            -> need to handle not idenity and no name -> 
        -> Should Display Page -> then DSOForYou(name) -> 
        -> then IdentityInfo(id)

        -> Reload Button -> can't call if no identity or name
            -> DSOEveryone so maybe like the last part just again?
            -> Add a last reload at relative time?

    10a) What about Identity and credits? -> See ^^^ -> Done
                -> Just add as another part of the login -> 

11) Refresh messages
    -> isLoading -> connected to the Identity and Name -> haha, i almost missed that -> Got it -> DONE
        -> also control the bottom Nav -> isLoading ->DONE
        -> how to I know if identity or name is not avail?
    -> attach trigger to the button

    11a) separate loading state for everyone and for you
    -> SEPARATE LOADINGS AND REMOVE ISAVAIL BC ITS JUST !LOADING <- 8)

    11b) Need to disable button while reloading -> 

THIS ^^^ WORK ON ABOVE THAT IS NOT DONE YET ^^^^

12) Top Up Identity
    -> put in the For me the credits ->
    -> add the modal -> DONE
    -> fix the button -> DONE
    -> add loading to verify that you have sufficient funds to modal and not the page -> DONE

    -> connect TopupFunction in the Modal ->
    -> connect the loading spinner ->
    -> connect the alert if insufficient funds -> 

THIS ^^^ WORK ON ABOVE THAT IS NOT DONE YET ^^^^

13) Data Contract and Document Testing
    13a) DataContract (have queries to ensure coverage) -> DONE
    13b) RetrieveDataContract -> 

14) Implement Document Creation
    14a) What are the different cases ->
    
15) Query the Documents
    15a)

16) Implement DC, Docs, Query in stand alone -> 13, 14, 15 ->
    16a) Add to the Dapp in App.js ->



//**************************************************************//
Combining Public Message Board and Personal Messager
//**************************************************************//

1) Complete Public Message Board - define the data contract and how to add comments or messages
  a) data contract ->
      DataContract (paste here)

  b) add comments (view) ability and ability to add to top of board!
    i)Modal? -> this way doesn't deviate from the top/bottom Nav flow but can I still view the page?
    ii) Offcanvas?
  c) New Message - Form - has to have check for more than one letter -> this will allow button to click
  also not more than so many characters will alert and disconnect button.

2) Complete Personal Messager - really it is an aggregator for messages that include the person in the messages
  a) Start with to a single person
  b) Allow multiple persons, use dashpay contacts or just separate by comma

3) Include reply ability and create threads -> no, out of scope - for now
